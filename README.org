* Multi User File Menu
Provides some UI controls and a search box for managing documents. These controls resemble the familiar controls you might find in a file menu.

Also allows for sharing of documents as URLs.

Allows for retrieval of historical versions of documents.

Note that there is no directory abstraction - only a flat space full of file names.

For use in conjunction with [[http://sharejs.org/][ShareJS]]. Depends on running our [[https://github.com/cse-bristol/process-model/tree/master/server][serverside ShareJS component]].

** Run the Demo
First, clone the repository:
#+BEGIN_SRC sh
  git clone git@github.com:cse-bristol/sharejs-file-menu.git
#+END_SRC

Our Javascript files our arranged as node.js modules, and we use the 'browserify' tool to combine them into a single file.

Install [[http://nodejs.org/][Node JS]]. On a Debian-based system, I'd recommend using this PPA:
#+BEGIN_SRC sh
## This is probably really obsolete now!
sudo add-apt-repository ppa:chris-lea/node.js
sudo aptitude update
sudo aptitude install -y nodejs
#+END_SRC

Next, install browserify using Node's package manager npm:
#+BEGIN_SRC sh
  npm -g install browserify # Install Browserify as a command you can run from your shell.
#+END_SRC

Run 'make', or run the appropriate commands manually if you do not have it:
#+BEGIN_SRC sh
  # On Linux, Mac OS, BSD etc., or from mingw32/Git Bash

  make # Runs the build target, which will execute the commands below for you.

  # On Windows (if you don't have mingw32).

  npm install # Install the various packages we depend on (listed in package.json).
  browserify process-model.js -o bin/main.js # Package all the Javascript code together in a way that we can load into a browser.
#+END_SRC

Serve index.html using any web server. For example, using python3 on a Debian system:
#+BEGIN_SRC sh
  sudo python3 -m http.server 80 &
#+END_SRC

** Source Code
[[https://github.com/cse-bristol/sharejs-file-menu][Get the source code.]]

** Future Plans
See [[file:TODO.org][TODO.org]].
